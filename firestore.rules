
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users: Only the authenticated user can read/update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Blog Posts: Publicly readable, only admins can write.
    match /blogPosts/{postId} {
        allow read: if true;
        allow create, update, delete: if request.auth != null; // Further checks can be added if there's an admin role
    }

    // AI Tools: Publicly readable, only admins can write.
    match /ai_tools/{toolId} {
        allow read: if true;
        allow write: if request.auth != null; // Assume admin role check happens in backend logic
    }
    
    // Pricing Plans: Publicly readable, only admins can write.
    match /pricingPlans/{planId} {
        allow read: if true;
        allow write: if request.auth != null; // Assume admin role check happens in backend logic
    }

    // Payments: Users can create, only admins can read/update.
    match /payments/{paymentId} {
        allow create: if request.auth != null;
        allow read, update: if request.auth != null; // Assume admin role check happens in backend logic
    }

    // Recent Upgrades: Publicly readable for the social proof toast.
    match /recent_upgrades/{upgradeId} {
        allow read: if true;
        allow create: if request.auth != null; // Can be created by server action (admin)
    }
  }
}
