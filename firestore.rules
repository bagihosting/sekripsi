
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserProfileOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isUserAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User profiles can be read by anyone but only modified by the owner.
    match /users/{userId} {
      allow read;
      allow create, update, delete: if isUserProfileOwner(userId);
    }

    // Pricing plans are public.
    match /pricingPlans/{planId} {
      allow read;
      allow write: if isUserAdmin();
    }
    
    // Payments can only be created by authenticated users.
    // They can only be read/updated by an admin.
    match /payments/{paymentId} {
        allow create: if isUserAuthenticated();
        allow read, update, delete: if isUserAdmin();
    }
    
    // Blog posts can be read by anyone if they are published.
    // They can be written/deleted only by an admin.
    match /blogPosts/{postId} {
        allow read: if resource.data.status == 'published';
        allow write, delete: if isUserAdmin();
    }
  }
}
